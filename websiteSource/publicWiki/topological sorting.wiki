= Topological sorting =

Definition: It is an algorithm toschedule a sequence of jobs or works based on their dependencies. Usually the dependencies of each jobs show as a graph.

An algorithm in acyclic graph:

{{{class="brush: cpp"

L ← Empty list that will contain the sorted elements
S ← Set of all nodes with no incoming edges
while S is non-empty do
    remove a node n from S
    insert n into L
    for each node m with an edge e from n to m do
        remove edge e from the graph
        if m has no other incoming edges then
            insert m into S
if graph has edges then
    return error (graph has at least one cycle)
else 
    return L (a topologically sorted order)

}}}

Another Algorithm:


{{{class="brush: cpp"

L ← Empty list that will contain the sorted nodes
S ← Set of all nodes with no incoming edges
for each node n in S do
    visit(n) 
function visit(node n)
    if n has not been visited yet then
        mark n as visited
        for each node m with an edge from n to m do
            visit(m)
        add n to L

}}}

== question ==
- [] I think in this Algorithm, should use BFS not DFS.

wikipedia: http://en.wikipedia.org/wiki/Topological_sorting
