%title Chapter2 Question4 

<h1 class="justcenter"> Chapter2 Question4 </h1>

= Question =

Write code to partition a linked list around a value x, such that all nodes less than x come before all nodes greater than or equal to x.

= Analysis =

Set three pointers, one points to the last element before x, one points to x, and one points to the first element after x.

Time complexity `O(N)`. Space complexity `O(1)`

= Solution =

{{{class="brush: java"
package chapter2;

public class Question4 {
    public static boolean resortLinkedList ( LinkedListNode head, int value ){
        if( head == null)
            return false;
        LinkedListNode current = head;
        LinkedListNode beforeXList = new LinkedListNode();
        LinkedListNode lastBeforeXList = beforeXList;
        LinkedListNode afterXList = new LinkedListNode();
        LinkedListNode lastAfterXList = afterXList;
        LinkedListNode X = null;
        while( current != null){
            if ( current.data == value){
                if ( X != null){
                    return false;
                }
                X = current;
            }else if ( current.data < value){
                lastBeforeXList.next = current;
                lastBeforeXList = current;
            }else if ( current.data > value){
                lastAfterXList.next = current;
                lastAfterXList = current;
            }
            current = current.next;
        }
        if ( X == null){
            return false;
        }
        X.next = afterXList.next;
        lastBeforeXList.next = X;
        head = beforeXList.next;
        lastAfterXList.next = null;
        return true;
    }
    public static void main(String[] args ){
        LinkedListNode linkedList = new LinkedListNode(0);
        linkedList.next = new LinkedListNode(10);
        linkedList.next.next = new LinkedListNode(3);
        linkedList.next.next.next = new LinkedListNode(2);
        linkedList.next.next.next.next = new LinkedListNode(4);
        linkedList.print();
        resortLinkedList(linkedList,4);
        linkedList.print();
    }

}

}}}

== Formal Code ==


{{{class="brush: java"
codeckage Question2_4;

import CtCILibrary.LinkedListNode;

public class Question {

    public static LinkedListNode partition(LinkedListNode node, int x) {
        LinkedListNode beforeStart = null;
        LinkedListNode beforeEnd = null;
        LinkedListNode afterStart = null;
        LinkedListNode afterEnd = null;

        /* Partition list */
        while (node != null) {
            LinkedListNode next = node.next;
            node.next = null;
            if (node.data < x) {
                if (beforeStart == null) {
                    beforeStart = node;
                    beforeEnd = beforeStart;
                } else {
                    beforeEnd.next = node;
                    beforeEnd = node;
                }
            } else {
                if (afterStart == null) {
                    afterStart = node;
                    afterEnd = afterStart;
                } else {
                    afterEnd.next = node;
                    afterEnd = node;
                }
            }   
            node = next;
        }

        /* Merge before list and after list */
        if (beforeStart == null) {
            return afterStart;
        }

        beforeEnd.next = afterStart;
        return beforeStart;
    }

    public static void main(String[] args) {
        /* Create linked list */
        int[] vals = {1, 3, 7, 5, 2, 9, 4};
        LinkedListNode head = new LinkedListNode(vals[0], null, null);
        LinkedListNode current = head;
        for (int i = 1; i < vals.length; i++) {
            current = new LinkedListNode(vals[i], null, current);
        }
        System.out.println(head.printForward());

        /* Partition */
        LinkedListNode h = partition(head, 5);

        /* Print Result */
        System.out.println(h.printForward());
    }

}
}}}

= Problem =

# No circle point in linkedlist.

= Reference =

# [[https://github.com/gaylemcd/ctci/blob/master/java/Chapter%202/Question2_4/Question.java|Formal Code]]

<h6 class="timestamp"> Created Time: 2014/02/03 11:40:21.      Last Modified Time:  . </h6>

